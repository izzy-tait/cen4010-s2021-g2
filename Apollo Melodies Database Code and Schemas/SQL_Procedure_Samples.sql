=========================================================================================================================================================
DELIMITER //
CREATE PROCEDURE DEV_PROFILE_GET_PROFILE_ID_NUMBER (IN THIS_MEMBER_ID varchar(255),IN THIS_DATE_CREATED timestamp, OUT THIS_MEMBER_NUMBER varchar(255))
	BEGIN
		SELECT MEMBER_NUMBER INTO THIS_MEMBER_NUMBER FROM DEV_MEMBER_PROFILE WHERE MEMBER_ID = THIS_MEMBER_ID AND DATE_CREATED = THIS_DATE_CREATED  LIMIT 1;
	END; //
DELIMITER ;

call DEV_PROFILE_GET_PROFILE_ID_NUMBER ('SUPER_TESTER456','2021-04-01 01:11:31',@RetreivedMemberNumber1);
call DEV_PROFILE_GET_PROFILE_ID_NUMBER ('SUPER_TESTER500','2021-04-01 01:11:51',@RetreivedMemberNumber2);
call DEV_PROFILE_GET_PROFILE_ID_NUMBER ('SUPER_TESTER590','2021-04-01 01:11:51',@RetreivedMemberNumber3);

SELECT @RetreivedMemberNumber1;
SELECT @RetreivedMemberNumber2;
SELECT @RetreivedMemberNumber3;
=========================================================================================================================================================
DELIMITER //
CREATE PROCEDURE DEV_PROFILE_IF_USERNAME_EXISTS (IN USERNAME varchar(255), OUT DOES_EXIST tinyint(1))
BEGIN
    	SELECT MEMBER_ID INTO @USERNAMEHOLDERFROM FROM `DEV_MEMBER_PROFILE` WHERE MEMBER_ID = USERNAME LIMIT 1;
		IF @USERNAMEHOLDERFROM IS NOT NULL
			THEN SET DOES_EXIST = '1';
            ELSE SET DOES_EXIST = '0';
		END IF;
END; //
DELIMITER;
call DEV_PROFILE_IF_USERNAME_EXISTS('SUPER_TESTER456',@Exist_Result1);
SELECT @Exist_Result1;
=========================================================================================================================================================
DELIMITER //
CREATE PROCEDURE DEV_PROFILE_IF_EMAIL_EXISTS (IN THIS_EMAIL_ADDRESS varchar(255), OUT DOES_EXIST tinyint(1))
BEGIN
    IF THIS_EMAIL_ADDRESS = ''
		THEN SET THIS_EMAIL_ADDRESS = 'No Email';	
	END IF;
	SELECT EMAIL_ADDRESS INTO @EMAILHOLDER FROM `DEV_MEMBER_PROFILE` WHERE EMAIL_ADDRESS  = THIS_EMAIL_ADDRESS LIMIT 1;
	IF @EMAILHOLDER IS NOT NULL
			THEN SET DOES_EXIST = '1';
            ELSE SET DOES_EXIST = '0';
	END IF;
END; //
DELIMITER;


call DEV_PROFILE_IF_EMAIL_EXISTS('anyemail@hotmail.com',@Exist_Result1);
SELECT @Exist_Result1;
=========================================================================================================================================================
DELIMITER //
CREATE PROCEDURE DEV_UPDATE_ACTIVITY_LOG (IN THIS_ACTIVITY_TYPE varchar(20),IN THIS_DOER_MEMBER_NUMBER varchar(255),IN THIS_RECIPIENT_MEMBER_NUMBER varchar(255),IN THIS_QUIZ_NUMBER varchar(255),IN THIS_MESSAGE_NUMBER varchar(255),IN THIS_BLOCK_NUMBER varchar(255),IN THIS_BLOG_NUMBER varchar(255),IN THIS_MEDIA_NUMBER varchar(255),IN THIS_ACTIVITY_DETAIL varchar(3000), OUT WAS_SUCCESSFUL tinyint(1))
BEGIN
	call DEV_GENERIC_SET_ID_NUMBER('ACTIVITY_NUMBER','ACTIVITY',@NewIDNumber);
    INSERT INTO DEV_ACTIVITY_LOG (ACTIVITY_NUMBER,ACTIVITY_TYPE,DOER_MEMBER_NUMBER,RECIPIENT_MEMBER_NUMBER,QUIZ_NUMBER,MESSAGE_NUMBER,BLOCK_NUMBER,BLOG_NUMBER,MEDIA_NUMBER,ACTIVITY_DETAIL) VALUES(@NewIDNumber,THIS_ACTIVITY_TYPE,THIS_DOER_MEMBER_NUMBER,THIS_RECIPIENT_MEMBER_NUMBER,THIS_QUIZ_NUMBER,THIS_MESSAGE_NUMBER,THIS_BLOCK_NUMBER,THIS_BLOG_NUMBER,THIS_MEDIA_NUMBER,THIS_ACTIVITY_DETAIL);
	SET WAS_SUCCESSFUL = '1';
END; //
DELIMITER;

DEV_UPDATE_ACTIVITY_LOG ('SEND-MESSAGE','PROFILE10001-30','PROFILE10002-7676','','123456789','','','','Sent an email over', @Exist_Result1);
=========================================================================================================================================================
DELIMITER //
CREATE PROCEDURE DEV_FRIEND_IS_FRIEND (IN INQUIRING_PROFILE varchar(255),IN PROFILE_IN_QUESTION varchar(255),OUT IS_FRIEND tinyint(1))
	BEGIN
		SELECT FRIENDSHIP_NUMBER INTO @Identified_Friendship FROM `DEV_FRIEND_LIST` WHERE FRIENDOR_MEMBER_NUMBER = INQUIRING_PROFILE AND FRIENDEE_MEMBER_NUMBER = PROFILE_IN_QUESTION AND FRIENDSHIP_REQUEST_STATUS = 'ACCEPTED' OR FRIENDOR_MEMBER_NUMBER = PROFILE_IN_QUESTION AND FRIENDEE_MEMBER_NUMBER = INQUIRING_PROFILE AND FRIENDSHIP_REQUEST_STATUS = 'ACCEPTED' LIMIT 1;
		IF @Identified_Friendship IS NULL
			THEN SET IS_FRIEND = '0';
			ELSE SET IS_FRIEND = '1';
		END IF;
	END; //
DELIMITER ;
CALL DEV_FRIEND_IS_FRIEND('PROFILE10003-681','PROFILE10001-30',@resultboolean);
SELECT @resultboolean;
=========================================================================================================================================================
DELIMITER //
CREATE PROCEDURE DEV_BLOCKING_IS_BLOCKED (IN THIS_BLOCKER_PROFILE_NUMBER varchar(255), IN THIS_BLOCKEE_PROFILE_NUMBER varchar(255),OUT IS_BLOCKED tinyint(1))
	BEGIN
		SELECT BLOCK_RECORD_NUMBER INTO @BlockRecordCapture FROM `DEV_BLOCK_LIST` WHERE BLOCKER_PROFILE_NUMBER = THIS_BLOCKER_PROFILE_NUMBER AND BLOCKEE_PROFILE_NUMBER = THIS_BLOCKEE_PROFILE_NUMBER AND IS_DELETED = 0 OR BLOCKER_PROFILE_NUMBER = THIS_BLOCKEE_PROFILE_NUMBER AND BLOCKEE_PROFILE_NUMBER = THIS_BLOCKER_PROFILE_NUMBER AND IS_DELETED = 0 LIMIT 1;
		IF @BlockRecordCapture IS NULL
			THEN SET IS_BLOCKED = '0';
			ELSE SET IS_BLOCKED = '1';		
		END IF;
	END;//
DELIMITER ;
call DEV_BLOCKING_IS_BLOCKED('BLOCK10002-1182','PROFILE10003-681',@resultant);
=========================================================================================================================================================
DELIMITER //
CREATE PROCEDURE DEV_PROFILE_CREATE_PROFILE (IN THIS_MEMBER_ID varchar(80), IN THIS_ENCRYPT_PASSWORD varchar(50), IN THIS_FIRST_NAME varchar(120),IN THIS_LAST_NAME varchar(120), IN THIS_EMAIL_ADDRESS varchar(100),OUT IS_SUCCESSFUL tinyint(1))
	BEGIN
		START TRANSACTION;
			call DEV_GENERIC_SET_ID_NUMBER('MEMBER_NUMBER','PROFILE',@New_ID);
			INSERT INTO `DEV_MEMBER_PROFILE` (MEMBER_NUMBER,MEMBER_ID,ENCRYPT_PASSWORD,FIRST_NAME,LAST_NAME,EMAIL_ADDRESS) VALUES(@New_ID,THIS_MEMBER_ID,THIS_ENCRYPT_PASSWORD,THIS_FIRST_NAME,THIS_LAST_NAME,THIS_EMAIL_ADDRESS);
			call DEV_UPDATE_ACTIVITY_LOG('PROFILE_CREATED',@New_ID,'','','','','','','NEW USER CREATED',@success_monitor);
			SET IS_SUCCESSFUL = '1';
		COMMIT;
	END;//
DELIMITER ;

call DEV_PROFILE_CREATE_PROFILE ('NewMemberID','PWORD','JOHN','NEW', 'myemail@anyemail.com',@IS_SUCCESSFUL);
=========================================================================================================================================================
